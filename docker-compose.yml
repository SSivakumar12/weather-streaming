---
version: '3.7'
services:

  broker:
    image: confluentinc/cp-server:7.3.1
    hostname: broker
    container_name: broker
    networks:
      - weather-network
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9101:9101
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_LOG4J_ROOT_LOGLEVEL: ERROR
      KAFKA_LOG4J_TOOLS_ROOT_LOGLEVEL: ERROR
      KAFKA_LOG4J_LOGGERS: kafka=ERROR,kafka.cluster=ERROR,kafka.controller=ERROR,kafka.coordinator=ERROR,\
        kafka.log=ERROR,kafka.log.LogCleaner=ERROR,kafka.producer.async.DefaultEventHandler=ERROR,\
        kafka.server=ERROR,kafka.zookeeper=ERROR,state.change.logger=ERROR
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous
    healthcheck:  # healthy <==> topic existence
      test: >
        topics=$(kafka-topics --list --bootstrap-server localhost:9092) &&
        echo $${topics} | grep -q city-topic-5
      interval: 30s
      retries: 4
      start_period: 60s
      timeout: 10s

  confluent-schema-registry:
    image: confluentinc/cp-schema-registry:7.3.1
    hostname: confluent-schema-registry
    container_name: confluent-schema-registry
    networks:
      - weather-network
    depends_on:
      - broker
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: confluent-schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:29092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_SCHEMA_COMPATIBILITY_LEVEL: NONE

  control-center:  # connect to this in your browser at http://localhost:9021
    image: confluentinc/cp-enterprise-control-center:7.3.1
    hostname: control-center
    container_name: control-center
    networks:
      - weather-network
    depends_on:
      - broker
      - confluent-schema-registry
    ports:
      - 9021:9021
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: broker:29092
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: http://confluent-schema-registry:8081
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  topic-setup:
    image: confluentinc/cp-server:7.3.1
    hostname: topic-setup
    container_name: topic-setup
    networks:
      - weather-network
    depends_on:
      - broker
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
    command: >
      bash -c 'echo Waiting for Kafka to be ready... && cub kafka-ready -b broker:29092 1 20 &&
      echo Creating topics... &&
      kafka-topics --create --if-not-exists --bootstrap-server broker:29092 --partitions 1 --topic city-topic-1 &&
      kafka-topics --create --if-not-exists --bootstrap-server broker:29092 --partitions 1 --topic city-topic-2 &&
      kafka-topics --create --if-not-exists --bootstrap-server broker:29092 --partitions 1 --topic city-topic-3 &&
      kafka-topics --create --if-not-exists --bootstrap-server broker:29092 --partitions 1 --topic city-topic-4 &&
      kafka-topics --create --if-not-exists --bootstrap-server broker:29092 --partitions 1 --topic city-topic-5'

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - weather-network
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  
  elasticsearch-cs:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    container_name: elasticsearch-cs
    networks:
      - weather-network
    environment:
      - node.name=elasticsearch-cs
      - cluster.name=elasticsearch-cluster
      - cluster.initial_master_nodes=elasticsearch-cs
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    # volumes:
    #   - data-cs:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.0
    container_name: kibana
    networks:
      - weather-network
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch-cs:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch-cs:9200"]'
    depends_on:
      - elasticsearch-cs

volumes:
  data-cs:
    driver: local

networks:
  weather-network:
